window.smoothScroll = (function (window, document, undefined) {'use strict'; var _defaults = {speed: 500, facilitando: 'comfortInOutCubic', updateURL: false, callbackBefore: function () {}, callbackAfter: function () {}}; var _mergeObjects = função (original, atualizações) {for (var chave em atualizações) {original [chave] = atualizações [chave]} retorna original}; var _easingPattern = função (tipo, hora) {if (type = = 'facilidadeInQuad') retornar tempo * hora; if (tipo == 'facilidadeOutQuad') retornar tempo * (2 vezes); if (tipo == 'facilidadeInOutQuad') retornar tempo <0,5? 2 * hora * tempo: -1 + (4-2 * time) * time; if (type == 'comfortInCubic') retorna time * time * time; if (type == 'comfortOutCubic') return (- time) * time * time + 1; if (tipo == 'comfortInOutCubic') tempo de retorno <0,5? 4 * hora * hora * hora: (hora-1) * (2 * hora-2) * (2 * hora-2) +1; if (type == 'comfortInQuart') retorna time * time * time * time; if (type == 'comfortOutQuart') return 1 - (- time) * time * time * time; if (type == 'comfortInOutQuart') retorna time <0.5? 8 * time * time * time * time: 1-8 * (- time) * time * time * time; if (type == 'comfortInQuint') retorna time * time * time * time * time; if (type == 'comfortOutQuint') retorna 1 + (- time) * time * time * time * time; if (type == 'comfortInOutQuint') retornar tempo <0,5? 16 * hora * hora * hora * hora * hora: 1 + 16 * (- hora) * hora * hora * hora * hora; hora de retorno}; var _getEndLocation = function (âncora, headerHeight) {var location = 0; if (anchor.offsetParent) {do {location + = anchor.offsetTop; anchor = anchor.offsetParent} while (anchor)} location = location-headerHeight; if (location > = 0) {retornar local} else {retornar 0}}; var _getDataOptions = function (options) {if (options === null || options === undefined) {return {}} else {var settings = {} ; opções = options.split (';'); options.forEach (function (option) {option = option.trim (); if (option! == '') {option = option.split (':'); settings [option [0]] = option [1] .trim ()}}); return settings}}; var _updateURL = function (âncora, url) {if ( (url === true || url === 'true') && history.pushState) {history.pushState ({pos: anchor.id}, '', anchor)}}; var animateScroll = function (alternar, âncora, opções, evento) {options = _mergeObjects (_defaults, options || {}); var overrides = _getDataOptions (toggle? toggle.getAttribute ('dados-opções'): nulo)); var speed = overrides.speed || options.speed ; var easing = substitui.easing || opções.easing; var updateURL = substitui.updateURL || opções.updateURL; var headerHeight = 55; var startLocation = window.pageYOffset; var endLocation = _getEndLocation (document.querySelector (anchor), headerHeight ); var animationInterval; var distance = endLocation-startLocation; var timeLapsed = 0; var porcentagem, posição; if (alternar && toggle.tagName === 'A'&& event) {event.preventDefault ()} _ updateURL (anchor, updateURL); var _stopAnimateScroll = função (posição, endLocation, animationInterval) {var currentLocation = window.pageYOffset; if (position == endLocation || currentLocation == endLocation || ( (window.innerHeight + currentLocation)> = document.body.scrollHeight)) {clearInterval (animationInterval); opções.callbackAfter (alternar, âncora)}}; var _loopAnimateScroll = function () {timeLapsed + = 16; porcentagem = (timeLapsed / speed ); porcentagem = (porcentagem> 1)? 1: porcentagem; posição = startLocation + (distância * _easingPattern (flexibilização, porcentagem)); window.scrollTo (0, Math.floor (position)); _ stopAnimateScroll (position, endLocation, animationInterval) }; var _startAnimateScroll = function () {options.callbackBefore (alternar, âncora); animationInterval = setInterval (_loopAnimateScroll, 16)}; if (window.pageYOffset === 0) {window.scrollTo (0,0)} _ startAnimateScroll ()}; var init = function (options) {if ('querySelector'in document &&' addEventListener'in window && Array.prototype.forEach) {options = _mergeObjects (_defaults, options || {}); var alterna = document.querySelectorAll ('[data-scroll]'); Array.prototype.forEach.call (alterna, função (alternar, índice) {toggle.addEventListener ('clique', animateScroll.bind (nulo, alternar, alternar.getAttribute ( 'href'), opções), false)})}}; return {init: init, animateScroll: animateScroll}}) (janela, documento);addEventListener ('click', animateScroll.bind (null, toggle, toggle.getAttribute ('href'), opções), false)})})}}; return {init: init, animateScroll: animateScroll}}) (janela, documento) ;addEventListener ('clique', animateScroll.bind (null, alternar, alternar.getAttribute ('href'), opções), false)})})}}; retornar {init: init, animateScroll: animateScroll}}) (janela, documento) ;
